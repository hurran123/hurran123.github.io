<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>E = mc^2</title>
  
  <subtitle>Life is physics !</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-14T16:40:54.983Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>MingQi Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The installation of glafic</title>
    <link href="http://example.com/2024/12/15/hello-world/"/>
    <id>http://example.com/2024/12/15/hello-world/</id>
    <published>2024-12-14T16:40:54.975Z</published>
    <updated>2024-12-14T16:40:54.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Installation-of-Glafic-Library"><a href="#Installation-of-Glafic-Library" class="headerlink" title="Installation of Glafic Library"></a>Installation of Glafic Library</h1><p>The Glafic library is written in C and cannot be directly installed using <code>pip install</code>. However, the author has provided Python bindings via C-to-Python translation. Installation requires a series of steps:</p><h2 id="Download-Glafic"><a href="#Download-Glafic" class="headerlink" title="Download Glafic"></a>Download Glafic</h2><ol><li>Download the zip file from <a href="https://github.com/oguri/glafic2">Glafic GitHub Repository</a>.</li><li>Extract the zip file to a specified directory (any location).</li><li>Open a terminal in the corresponding folder.</li></ol><h3 id="Install-Required-Header-Files-needed-by-Glafic-library"><a href="#Install-Required-Header-Files-needed-by-Glafic-library" class="headerlink" title="Install Required Header Files (needed by Glafic library)"></a>Install Required Header Files (needed by Glafic library)</h3><p>Open the terminal and install the necessary dependencies:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install libfftw3-dev</span><br><span class="line"><span class="built_in">sudo</span> apt-get install libcfitsio-dev</span><br><span class="line"><span class="built_in">sudo</span> apt-get install libgsl-dev</span><br></pre></td></tr></table></figure><h3 id="Locate-the-Installation-Paths-for-Libraries"><a href="#Locate-the-Installation-Paths-for-Libraries" class="headerlink" title="Locate the Installation Paths for Libraries"></a>Locate the Installation Paths for Libraries</h3><p>The default location is usually <code>/usr/lib</code>, but sometimes the libraries might be installed in different directories. For example, the libraries may be located in <code>/usr/lib/x86_64-linux-gnu</code>. To find the exact location, use the following commands:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> find / -name <span class="string">&quot;libcfitsio.so&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> find / -name <span class="string">&quot;libfftw3.so&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> find / -name <span class="string">&quot;libgsl.so&quot;</span></span><br></pre></td></tr></table></figure><p>The results may look like:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base) usr@usr-computer:~$ <span class="built_in">sudo</span> find / -name <span class="string">&quot;libcfitsio.so&quot;</span></span><br><span class="line">find: ‘/run/user/1000/doc’: Permission denied</span><br><span class="line">find: ‘/run/user/1000/gvfs’: Permission denied</span><br><span class="line">find: ‘/proc/1730/task/1730/net’: Invalid argument</span><br><span class="line">find: ‘/proc/1730/net’: Invalid argument</span><br><span class="line">/usr/lib/x86_64-linux-gnu/libcfitsio.so</span><br></pre></td></tr></table></figure><h3 id="Modify-Global-Environment"><a href="#Modify-Global-Environment" class="headerlink" title="Modify Global Environment"></a>Modify Global Environment</h3><p>Edit your global environment settings to add the library paths:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure><p>Add the following line at the end of the file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/local/lib/x86_64-linux-gnu:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure><p>Replace <code>/usr/local/lib/x86_64-linux-gnu</code> with the actual path where the libraries are installed.</p><p>To save and exit the <code>nano</code> editor:</p><ul><li>Press <code>Ctrl + O</code> to save.</li><li>Press <code>Enter</code> to confirm.</li><li>Press <code>Ctrl + X</code> to exit.</li></ul><p>Update the environment:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="Modify-the-Makefile"><a href="#Modify-the-Makefile" class="headerlink" title="Modify the Makefile"></a>Modify the Makefile</h3><p>Edit the <code>Makefile</code> to ensure it uses the correct library paths:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">UNAME_S := <span class="variable">$(<span class="built_in">shell</span> uname -s)</span></span><br><span class="line">UNAME_M := <span class="variable">$(<span class="built_in">shell</span> uname -m)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(UNAME_S)</span>,Darwin)</span><br><span class="line">        <span class="keyword">ifeq</span> (<span class="variable">$(UNAME_M)</span>,x86_64)</span><br><span class="line">                CFLAGS2 = -lcurl</span><br><span class="line">                LIBPATH = /usr/local/lib</span><br><span class="line">                INCPATH = /usr/local/<span class="keyword">include</span></span><br><span class="line">                PY_LIBS = -lm -lcfitsio -lfftw3 -lgsl -lgslcblas</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                CFLAGS2 = -lcurl -lz</span><br><span class="line">                LIBPATH = /opt/homebrew/lib</span><br><span class="line">                INCPATH = /opt/homebrew/<span class="keyword">include</span></span><br><span class="line">                PY_LIBS = -lm -lcfitsio -lfftw3 -lgsl -lgslcblas</span><br><span class="line">        <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="keyword">ifeq</span> (<span class="variable">$(UNAME_S)</span>,Linux)</span><br><span class="line">                CFLAGS2 =</span><br><span class="line">                LIBPATH = /usr/lib/x86_64-linux-gnu  <span class="comment"># Update this path</span></span><br><span class="line">                INCPATH = /usr/local/<span class="keyword">include</span></span><br><span class="line">                PY_LIBS = -lm -lcfitsio -lfftw3 -lgsl -lgslcblas  <span class="comment"># Use dynamic linking (.so)</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                CFLAGS2 =</span><br><span class="line">                LIBPATH =</span><br><span class="line">                INCPATH =</span><br><span class="line">                PY_LIBS =</span><br><span class="line">        <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line">CC      = gcc</span><br><span class="line">CFLAGS  = -O2 -Wall -fPIC -I<span class="variable">$(INCPATH)</span></span><br><span class="line">LIBS    = -lm -lcfitsio -lfftw3 -lgsl -lgslcblas  <span class="comment"># Modify to use dynamic libraries (.so)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use .so files</span></span><br><span class="line">LIBS    = -lm -L<span class="variable">$(LIBPATH)</span> -lcfitsio -lfftw3 -lgsl -lgslcblas  <span class="comment"># Add -L$(LIBPATH) for the linker to find the library files</span></span><br></pre></td></tr></table></figure><h3 id="Install-Python-Libraries"><a href="#Install-Python-Libraries" class="headerlink" title="Install Python Libraries"></a>Install Python Libraries</h3><p>Navigate to the directory containing <code>setup.py</code> and run the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install .</span><br></pre></td></tr></table></figure><p>Now you should be able to import and use the Glafic library in Python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> glafic</span><br></pre></td></tr></table></figure><hr><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h3><ul><li>This guide assumes the user is working on a <strong>Linux</strong> system, likely Ubuntu.</li><li>The Python bindings are created via <code>setup.py</code>, and users need to ensure their system is set up to compile C code and link libraries.</li><li>Ensure you replace the paths with the correct installation locations, especially for the libraries, if they are in a custom directory.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Installation-of-Glafic-Library&quot;&gt;&lt;a href=&quot;#Installation-of-Glafic-Library&quot; class=&quot;headerlink&quot; title=&quot;Installation of Glafic Library&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
